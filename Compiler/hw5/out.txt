== source program ==
{
 int n;
 int[8] arr;
 int i;
 int idx;
 int flag;
 n = 8;
 arr[0] = 5;
 arr[1] = 3;
 arr[2] = 7;
 arr[3] = 2;
 arr[4] = 4;
 arr[5] = 6;
 arr[6] = 8;
 flag = 0;
 idx = 1;
 read i;
 while i>0&&idx<n&&!flag  {
  if arr[idx-1]==i    {
   flag = 1;
   idx = n;
  }
else    {
   if arr[idx-1]<i      {
    idx = 2*idx+1;
   }
else      {
    idx = 2*idx;
   }

  }

 }

 print flag;
}
== execution of the source program ==
0
== translated target program ==
0 : n = 0
0 : arr = alloc (8)
0 : i = 0
0 : idx = 0
0 : flag = 0
0 : .t1 = 8
0 : n = .t1
0 : .t2 = 0
0 : .t3 = 5
0 : arr[.t2] = .t3
0 : .t4 = 1
0 : .t5 = 3
0 : arr[.t4] = .t5
0 : .t6 = 2
0 : .t7 = 7
0 : arr[.t6] = .t7
0 : .t8 = 3
0 : .t9 = 2
0 : arr[.t8] = .t9
0 : .t10 = 4
0 : .t11 = 4
0 : arr[.t10] = .t11
0 : .t12 = 5
0 : .t13 = 6
0 : arr[.t12] = .t13
0 : .t14 = 6
0 : .t15 = 8
0 : arr[.t14] = .t15
0 : .t16 = 0
0 : flag = .t16
0 : .t17 = 1
0 : idx = .t17
0 : read i
8 : SKIP
0 : .t18 = i
0 : .t19 = 0
0 : .t20 = .t18 > .t19
0 : .t21 = idx
0 : .t22 = n
0 : .t23 = .t21 < .t22
0 : .t24 = .t20 && .t23
0 : .t25 = flag
0 : .t26 = !.t25
0 : .t27 = .t24 && .t26
0 : iffalse .t27 goto 9
0 : .t28 = idx
0 : .t29 = 1
0 : .t30 = .t28 - .t29
0 : .t31 = arr[.t30]
0 : .t32 = i
0 : .t33 = .t31 == .t32
0 : if .t33 goto 5
0 : goto 6
5 : SKIP
0 : .t34 = 1
0 : flag = .t34
0 : .t35 = n
0 : idx = .t35
0 : goto 7
6 : SKIP
0 : .t36 = idx
0 : .t37 = 1
0 : .t38 = .t36 - .t37
0 : .t39 = arr[.t38]
0 : .t40 = i
0 : .t41 = .t39 < .t40
0 : if .t41 goto 2
0 : goto 3
2 : SKIP
0 : .t42 = 2
0 : .t43 = idx
0 : .t44 = .t42 * .t43
0 : .t45 = 1
0 : .t46 = .t44 + .t45
0 : idx = .t46
0 : goto 4
3 : SKIP
0 : .t47 = 2
0 : .t48 = idx
0 : .t49 = .t47 * .t48
0 : idx = .t49
0 : goto 4
4 : SKIP
0 : goto 7
7 : SKIP
0 : goto 8
9 : SKIP
0 : .t50 = flag
0 : write .t50
0 : HALT
== execution of the translated program ==
0
The number of instructions executed : 165
== optimized target program ==
0 : n = 0
0 : arr = alloc (8)
0 : i = 0
0 : idx = 0
0 : flag = 0
0 : .t1 = 8
0 : n = .t1
0 : .t2 = 0
0 : .t3 = 5
0 : arr[.t2] = .t3
0 : .t4 = 1
0 : .t5 = 3
0 : arr[.t4] = .t5
0 : .t6 = 2
0 : .t7 = 7
0 : arr[.t6] = .t7
0 : .t8 = 3
0 : .t9 = 2
0 : arr[.t8] = .t9
0 : .t10 = 4
0 : .t11 = 4
0 : arr[.t10] = .t11
0 : .t12 = 5
0 : .t13 = 6
0 : arr[.t12] = .t13
0 : .t14 = 6
0 : .t15 = 8
0 : arr[.t14] = .t15
0 : .t16 = 0
0 : flag = .t16
0 : .t17 = 1
0 : idx = .t17
0 : read i
8 : SKIP
0 : .t18 = i
0 : .t19 = 0
0 : .t20 = .t18 > .t19
0 : .t21 = idx
0 : .t22 = n
0 : .t23 = .t21 < .t22
0 : .t24 = .t20 && .t23
0 : .t25 = flag
0 : .t26 = !.t25
0 : .t27 = .t24 && .t26
0 : iffalse .t27 goto 9
0 : .t28 = idx
0 : .t29 = 1
0 : .t30 = .t28 - .t29
0 : .t31 = arr[.t30]
0 : .t32 = i
0 : .t33 = .t31 == .t32
0 : if .t33 goto 5
0 : goto 6
5 : SKIP
0 : .t34 = 1
0 : flag = .t34
0 : .t35 = n
0 : idx = .t35
0 : goto 7
6 : SKIP
0 : .t36 = idx
0 : .t37 = 1
0 : .t38 = .t36 - .t37
0 : .t39 = arr[.t38]
0 : .t40 = i
0 : .t41 = .t39 < .t40
0 : if .t41 goto 2
0 : goto 3
2 : SKIP
0 : .t42 = 2
0 : .t43 = idx
0 : .t44 = .t42 * .t43
0 : .t45 = 1
0 : .t46 = .t44 + .t45
0 : idx = .t46
0 : goto 4
3 : SKIP
0 : .t47 = 2
0 : .t48 = idx
0 : .t49 = .t47 * .t48
0 : idx = .t49
0 : goto 4
4 : SKIP
0 : goto 7
7 : SKIP
0 : goto 8
9 : SKIP
0 : .t50 = flag
0 : write .t50
0 : HALT
== execution the optimized target program ==
0
The number of instructions executed : 165
